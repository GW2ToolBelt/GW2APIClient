{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GW2APIClient \u00b6 GW2APIClient is a cross-platform client for the official Guild Wars 2 API. By leveraging Kotlin Multiplatform , GW2APIClient can be used on a large variety of platforms (including Android, the JVM, and JS) and interoperates seamlessly with various popular programming languages. GW2APIClient provides low-level access to the data provided by Guild Wars 2's API. It does not provide higher-level abstractions, visualizations or analytical functionality but may be used to build such tools. The api-generator is used to generate the types and endpoint definitions for this library. Head over to its repository to learn more about Guild Wars 2's API. Getting Started \u00b6 GW2APIClient consists of two primary modules: API Types \u00b6 The api-types module provides type-safe definitions for the objects returned by the Guild Wars 2 API. kotlinx.serialization is used for built-in support for serialization from and to JSON. A type definition for the identity field exposed by the MumbleLink mechanism is also available. Check out GW2ML for reading MumbleLink data. API Client \u00b6 The api-client module provides definitions for the endpoints available as part of the Guild Wars 2 API. Configuring the Cache \u00b6 To configure an API client to use a cache, a CacheAccess implementation can be specified during construction. This library does not provide a default cache implementation yet. Configuring the Rate Limiter \u00b6 By default, a GW2APIClient is configured with a TokenBucketRateLimiter with bucketSize set to 300 and refillMillis set to 1 second. While this limit is usually a good fit as it matches the behavior of the official API, it may be desirable to customize rate limiting. To overwrite the default rate limiter, an RateLimiter implementation can be passed during the construction of an API client. If the rate limiter is set to null , the client does not perform any rate limiting. Configuring Requests \u00b6 Before executing a request, it can be configured by using the RequestBuilder instance. These builders are initialized with the defaults from the API client but many settings may be tweaked as desired. Property \"Wither\" Description apiKey withAPIKey The API key to use for the request cacheAccess withCacheAccess The cache access to use for the request checkPermissions withPermissionChecks Whether client-side permission checks are enabled language withLanguage The language for the request rateLimiter withRateLimiter The rate limiter to use for the request HttpClient Implementations \u00b6 The api-client-{jdk11|ktor} modules provide implementations using Java 11's HttpClient or Ktor's HttpClient respectively. Example \u00b6 Retrieve the Build ID \u00b6 suspend fun main () { val client = GW2APIClient (...) val requestBuilder = client . gw2v2Build () val request = coroutineScope { requestBuilder . execute ( this ) } val response = request . get () val gw2v2Build = response . data . getOrNull () ?: error ( \"Could not decode request\" ) println ( \"Build ID: ${ gw2v2Build . id } \" ) } Retrieving Items \u00b6 The following example retrieves the first 1000 items listed in /v2/items in parallel and prints their ids and names: suspend fun main () = coroutineScope { val client = GW2APIClient ( /* JDKHttpClientImpl() or KtorHttpClientImpl() */ ) val itemIds = client . gw2v2ItemsIDs (). execute ( this ). get (). data . getOrNull () ?: error ( \"Failed to fetch item IDs.\" ) val items = itemIds . take ( 1000 ). chunked ( 200 ). map { ids -> async { client . gw2v2ItemsByIDs ( ids ). execute ( this ). get (). data . getOrNull () ?: error ( \"Request failed.\" ) } }. awaitAll (). flatten () for ( item in items ) { println ( \"[ ${ item . id } ] ${ item . name } \" ) } } Supported Platforms \u00b6 The library is written in platform-independent Kotlin code and can be used on Android, JavaScript and the JVM and native targets. Currently, prebuilt binaries are only available for the JVM (and Android) and JS. Building from source \u00b6 Setup \u00b6 This project uses Gradle's toolchain support to detect and select the JDKs required to run the build. Please refer to the build scripts to find out which toolchains are requested. An installed JDK 1.8 (or later) is required to use Gradle. Building \u00b6 Once the setup is complete, invoke the respective Gradle tasks using the following command on Unix/macOS: ./gradlew <tasks> or the following command on Windows: gradlew <tasks> Important Gradle tasks to remember are: - clean - clean build results - build - assemble and test the Java library - publishToMavenLocal - build and install all public artifacts to the local maven repository Additionally tasks may be used to print a list of all available tasks. License \u00b6 GW2APIClient \u00b6 Copyright (c) 2018-2022 Leon Linhart Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Guild Wars 2 \u00b6 \u00a92010\u20132018 ArenaNet, LLC. All rights reserved. Guild Wars, Guild Wars 2, Heart of Thorns, Guild Wars 2: Path of Fire, ArenaNet, NCSOFT, the Interlocking NC Logo, and all associated logos and designs are trademarks or registered trademarks of NCSOFT Corporation. All other trademarks are the property of their respective owners. As taken from Guild Wars 2 Content Terms of Use on 2019-09-09 17:31 CET.","title":"Overview"},{"location":"#gw2apiclient","text":"GW2APIClient is a cross-platform client for the official Guild Wars 2 API. By leveraging Kotlin Multiplatform , GW2APIClient can be used on a large variety of platforms (including Android, the JVM, and JS) and interoperates seamlessly with various popular programming languages. GW2APIClient provides low-level access to the data provided by Guild Wars 2's API. It does not provide higher-level abstractions, visualizations or analytical functionality but may be used to build such tools. The api-generator is used to generate the types and endpoint definitions for this library. Head over to its repository to learn more about Guild Wars 2's API.","title":"GW2APIClient"},{"location":"#getting-started","text":"GW2APIClient consists of two primary modules:","title":"Getting Started"},{"location":"#api-types","text":"The api-types module provides type-safe definitions for the objects returned by the Guild Wars 2 API. kotlinx.serialization is used for built-in support for serialization from and to JSON. A type definition for the identity field exposed by the MumbleLink mechanism is also available. Check out GW2ML for reading MumbleLink data.","title":"API Types"},{"location":"#api-client","text":"The api-client module provides definitions for the endpoints available as part of the Guild Wars 2 API.","title":"API Client"},{"location":"#configuring-the-cache","text":"To configure an API client to use a cache, a CacheAccess implementation can be specified during construction. This library does not provide a default cache implementation yet.","title":"Configuring the Cache"},{"location":"#configuring-the-rate-limiter","text":"By default, a GW2APIClient is configured with a TokenBucketRateLimiter with bucketSize set to 300 and refillMillis set to 1 second. While this limit is usually a good fit as it matches the behavior of the official API, it may be desirable to customize rate limiting. To overwrite the default rate limiter, an RateLimiter implementation can be passed during the construction of an API client. If the rate limiter is set to null , the client does not perform any rate limiting.","title":"Configuring the Rate Limiter"},{"location":"#configuring-requests","text":"Before executing a request, it can be configured by using the RequestBuilder instance. These builders are initialized with the defaults from the API client but many settings may be tweaked as desired. Property \"Wither\" Description apiKey withAPIKey The API key to use for the request cacheAccess withCacheAccess The cache access to use for the request checkPermissions withPermissionChecks Whether client-side permission checks are enabled language withLanguage The language for the request rateLimiter withRateLimiter The rate limiter to use for the request","title":"Configuring Requests"},{"location":"#httpclient-implementations","text":"The api-client-{jdk11|ktor} modules provide implementations using Java 11's HttpClient or Ktor's HttpClient respectively.","title":"HttpClient Implementations"},{"location":"#example","text":"","title":"Example"},{"location":"#retrieve-the-build-id","text":"suspend fun main () { val client = GW2APIClient (...) val requestBuilder = client . gw2v2Build () val request = coroutineScope { requestBuilder . execute ( this ) } val response = request . get () val gw2v2Build = response . data . getOrNull () ?: error ( \"Could not decode request\" ) println ( \"Build ID: ${ gw2v2Build . id } \" ) }","title":"Retrieve the Build ID"},{"location":"#retrieving-items","text":"The following example retrieves the first 1000 items listed in /v2/items in parallel and prints their ids and names: suspend fun main () = coroutineScope { val client = GW2APIClient ( /* JDKHttpClientImpl() or KtorHttpClientImpl() */ ) val itemIds = client . gw2v2ItemsIDs (). execute ( this ). get (). data . getOrNull () ?: error ( \"Failed to fetch item IDs.\" ) val items = itemIds . take ( 1000 ). chunked ( 200 ). map { ids -> async { client . gw2v2ItemsByIDs ( ids ). execute ( this ). get (). data . getOrNull () ?: error ( \"Request failed.\" ) } }. awaitAll (). flatten () for ( item in items ) { println ( \"[ ${ item . id } ] ${ item . name } \" ) } }","title":"Retrieving Items"},{"location":"#supported-platforms","text":"The library is written in platform-independent Kotlin code and can be used on Android, JavaScript and the JVM and native targets. Currently, prebuilt binaries are only available for the JVM (and Android) and JS.","title":"Supported Platforms"},{"location":"#building-from-source","text":"","title":"Building from source"},{"location":"#setup","text":"This project uses Gradle's toolchain support to detect and select the JDKs required to run the build. Please refer to the build scripts to find out which toolchains are requested. An installed JDK 1.8 (or later) is required to use Gradle.","title":"Setup"},{"location":"#building","text":"Once the setup is complete, invoke the respective Gradle tasks using the following command on Unix/macOS: ./gradlew <tasks> or the following command on Windows: gradlew <tasks> Important Gradle tasks to remember are: - clean - clean build results - build - assemble and test the Java library - publishToMavenLocal - build and install all public artifacts to the local maven repository Additionally tasks may be used to print a list of all available tasks.","title":"Building"},{"location":"#license","text":"","title":"License"},{"location":"#gw2apiclient_1","text":"Copyright (c) 2018-2022 Leon Linhart Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"GW2APIClient"},{"location":"#guild-wars-2","text":"\u00a92010\u20132018 ArenaNet, LLC. All rights reserved. Guild Wars, Guild Wars 2, Heart of Thorns, Guild Wars 2: Path of Fire, ArenaNet, NCSOFT, the Interlocking NC Logo, and all associated logos and designs are trademarks or registered trademarks of NCSOFT Corporation. All other trademarks are the property of their respective owners. As taken from Guild Wars 2 Content Terms of Use on 2019-09-09 17:31 CET.","title":"Guild Wars 2"},{"location":"contributing/","text":"Contributing \u00b6 Thank you for considering contributing to GW2APIClient! We welcome any type of contribution, regardless of whether it's code, documentation, or a bug report. Any contribution must be submitted as a pull request. (If you wish to report an issue or ask a question please use the issue tracker or discussions instead.) General Guidelines \u00b6 The bigger the pull request, the longer it will take to review and merge. Try to break down pull requests in smaller chunks that are logical self-contained changes. This project does not strictly follow any public formatting guidelines we could link here, but we ask you to stick to the formatting used when possible. Contributing Code \u00b6 A large part of this project's source code is generated. The code generation logic resides in generator the directory. To understand the generator, it is recommended to check out the api-generator (which provides the necessary data) first. Keep in mind, that the handwritten code should merely serve as a framework for the generated requests. Contributing Endpoints \u00b6 Endpoints and queries are generated from the definitions provided by the api-generator . Please visit the api-generator repository and issue tracker to request/contribute changes to or additions of endpoints. Contributing Documentation \u00b6 If you are contributing documentation on how to use this project, please describe why you think these improvements are necessary.","title":"Contributing"},{"location":"contributing/#contributing","text":"Thank you for considering contributing to GW2APIClient! We welcome any type of contribution, regardless of whether it's code, documentation, or a bug report. Any contribution must be submitted as a pull request. (If you wish to report an issue or ask a question please use the issue tracker or discussions instead.)","title":"Contributing"},{"location":"contributing/#general-guidelines","text":"The bigger the pull request, the longer it will take to review and merge. Try to break down pull requests in smaller chunks that are logical self-contained changes. This project does not strictly follow any public formatting guidelines we could link here, but we ask you to stick to the formatting used when possible.","title":"General Guidelines"},{"location":"contributing/#contributing-code","text":"A large part of this project's source code is generated. The code generation logic resides in generator the directory. To understand the generator, it is recommended to check out the api-generator (which provides the necessary data) first. Keep in mind, that the handwritten code should merely serve as a framework for the generated requests.","title":"Contributing Code"},{"location":"contributing/#contributing-endpoints","text":"Endpoints and queries are generated from the definitions provided by the api-generator . Please visit the api-generator repository and issue tracker to request/contribute changes to or additions of endpoints.","title":"Contributing Endpoints"},{"location":"contributing/#contributing-documentation","text":"If you are contributing documentation on how to use this project, please describe why you think these improvements are necessary.","title":"Contributing Documentation"},{"location":"changelog/","text":"Release notes for latest version \u00b6 Release notes for all versions \u00b6 Version History \u00b6 ????-??-?? 0.4.0 (TBD; work in progress) 2021-07-14 0.3.0 (latest) 2021-01-25 0.2.0 2020-12-24 0.1.0 This library is strictly following SemVer 2.0.0 .","title":"Index"},{"location":"changelog/#release-notes-for-latest-version","text":"","title":"Release notes for latest version"},{"location":"changelog/#release-notes-for-all-versions","text":"","title":"Release notes for all versions"},{"location":"changelog/#version-history","text":"????-??-?? 0.4.0 (TBD; work in progress) 2021-07-14 0.3.0 (latest) 2021-01-25 0.2.0 2020-12-24 0.1.0 This library is strictly following SemVer 2.0.0 .","title":"Version History"},{"location":"changelog/0.1.0/","text":"0.1.0 \u00b6 Released 2020 Dec 24 Overview \u00b6 GW2APIClient is a cross-platform client for the official Guild Wars 2 API. By leveraging Kotlin Multiplatform , GW2APIClient can be used on a large variety of platforms (including Android, the JVM, and JS) and interoperates seamlessly with various popular programming languages. GW2APIClient provides low-level access to the data provided by Guild Wars 2's API. It does not provide higher-level abstractions, visualizations or analytical functionality but may be used to build such tools.","title":"0.1.0"},{"location":"changelog/0.1.0/#010","text":"Released 2020 Dec 24","title":"0.1.0"},{"location":"changelog/0.1.0/#overview","text":"GW2APIClient is a cross-platform client for the official Guild Wars 2 API. By leveraging Kotlin Multiplatform , GW2APIClient can be used on a large variety of platforms (including Android, the JVM, and JS) and interoperates seamlessly with various popular programming languages. GW2APIClient provides low-level access to the data provided by Guild Wars 2's API. It does not provide higher-level abstractions, visualizations or analytical functionality but may be used to build such tools.","title":"Overview"},{"location":"changelog/0.2.0/","text":"0.2.0 \u00b6 Released 2021 Jan 25 Improvements \u00b6 Updated to api-generator to 0.3.0 .","title":"0.2.0"},{"location":"changelog/0.2.0/#020","text":"Released 2021 Jan 25","title":"0.2.0"},{"location":"changelog/0.2.0/#improvements","text":"Updated to api-generator to 0.3.0 .","title":"Improvements"},{"location":"changelog/0.3.0/","text":"0.3.0 \u00b6 Released 2021 Jul 14 Improvements \u00b6 Updated to api-generator to 0.4.0 . Result is now used to catch exceptions during deserialization.","title":"0.3.0"},{"location":"changelog/0.3.0/#030","text":"Released 2021 Jul 14","title":"0.3.0"},{"location":"changelog/0.3.0/#improvements","text":"Updated to api-generator to 0.4.0 . Result is now used to catch exceptions during deserialization.","title":"Improvements"},{"location":"changelog/0.4.0/","text":"0.4.0 \u00b6 Not Released Yet Improvements \u00b6 Updated to api-generator to 0.6.0 . Cleaned up caching. Renamed CacheAccessor to CacheAccess . Cache time overwrites were removed for now. Cleaned up the RateLimiter interface and related hooks. A default TokenBucketRateLimiter implementation is now available. API clients are now configured to use a rate limiter by default. Introduced the DecodingResult abstraction to improve error-handling capabilities for malformed data from the API. Introduced the ResponseHeaders abstraction that wraps headers of a Response and provides utilities. Improved documentation throughout the entire library. Breaking Changes \u00b6 All modules now require Kotlin 1.7 JVM modules now require Java 11 The library was significantly reworked and many things were either renamed or relocated. Detailed migration guidelines are not available for this release.","title":"0.4.0"},{"location":"changelog/0.4.0/#040","text":"Not Released Yet","title":"0.4.0"},{"location":"changelog/0.4.0/#improvements","text":"Updated to api-generator to 0.6.0 . Cleaned up caching. Renamed CacheAccessor to CacheAccess . Cache time overwrites were removed for now. Cleaned up the RateLimiter interface and related hooks. A default TokenBucketRateLimiter implementation is now available. API clients are now configured to use a rate limiter by default. Introduced the DecodingResult abstraction to improve error-handling capabilities for malformed data from the API. Introduced the ResponseHeaders abstraction that wraps headers of a Response and provides utilities. Improved documentation throughout the entire library.","title":"Improvements"},{"location":"changelog/0.4.0/#breaking-changes","text":"All modules now require Kotlin 1.7 JVM modules now require Java 11 The library was significantly reworked and many things were either renamed or relocated. Detailed migration guidelines are not available for this release.","title":"Breaking Changes"},{"location":"changelog/full/","text":"0.3.0 \u00b6 Released 2021 Jul 14 Improvements \u00b6 Updated to api-generator to 0.4.0 . Result is now used to catch exceptions during deserialization. 0.2.0 \u00b6 Released 2021 Jan 25 Improvements \u00b6 Updated to api-generator to 0.3.0 . 0.1.0 \u00b6 Released 2020 Dec 24 Overview \u00b6 GW2APIClient is a cross-platform client for the official Guild Wars 2 API. By leveraging Kotlin Multiplatform , GW2APIClient can be used on a large variety of platforms (including Android, the JVM, and JS) and interoperates seamlessly with various popular programming languages. GW2APIClient provides low-level access to the data provided by Guild Wars 2's API. It does not provide higher-level abstractions, visualizations or analytical functionality but may be used to build such tools.","title":"Full"},{"location":"changelog/full/#030","text":"Released 2021 Jul 14","title":"0.3.0"},{"location":"changelog/full/#improvements","text":"Updated to api-generator to 0.4.0 . Result is now used to catch exceptions during deserialization.","title":"Improvements"},{"location":"changelog/full/#020","text":"Released 2021 Jan 25","title":"0.2.0"},{"location":"changelog/full/#improvements_1","text":"Updated to api-generator to 0.3.0 .","title":"Improvements"},{"location":"changelog/full/#010","text":"Released 2020 Dec 24","title":"0.1.0"},{"location":"changelog/full/#overview","text":"GW2APIClient is a cross-platform client for the official Guild Wars 2 API. By leveraging Kotlin Multiplatform , GW2APIClient can be used on a large variety of platforms (including Android, the JVM, and JS) and interoperates seamlessly with various popular programming languages. GW2APIClient provides low-level access to the data provided by Guild Wars 2's API. It does not provide higher-level abstractions, visualizations or analytical functionality but may be used to build such tools.","title":"Overview"},{"location":"changelog/latest/","text":"0.3.0 \u00b6 Released 2021 Jul 14 Improvements \u00b6 Updated to api-generator to 0.4.0 . Result is now used to catch exceptions during deserialization.","title":"Latest"},{"location":"changelog/latest/#030","text":"Released 2021 Jul 14","title":"0.3.0"},{"location":"changelog/latest/#improvements","text":"Updated to api-generator to 0.4.0 . Result is now used to catch exceptions during deserialization.","title":"Improvements"}]}